package com.ciruy.heimerdinger.onion_kapt

import ciruy.b.heimerdinger.annotation.OnionNet
import io.reactivex.Flowable
import okhttp3.ResponseBody
import retrofit2.http.GET
import retrofit2.http.Streaming

@OnionNet
interface OnionNetExample {

    /**
     * Goal: function list below will be auto-generated by Kapt(Ciruy.B.Heimerdinger)
     * Thus change myself, and base on that, try to change the fussy world!
     *
     * kotlin file:called ResponseBodyExt
     * usage: create extension methods of target Entity,mainly to fit mvp model.
     *  ResponseBody.exampleRequest():Flowable<ResponseBody>
     * In exception:
     *  Based on onion functions.
     *  I want to create an extension function based on Flowable<T>.bindView(targetView:View)
     *  This extension function is mainly designed to make views be directly attach
     *  to target view.
     */
    @GET("exampleRequest")
    @Streaming
    fun exampleRequest(): Flowable<ResponseBody>
}

